(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{337:function(t,e,a){"use strict";a.r(e);var r=a(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"skywalking-支持云原生网络代理-mosn-做分布式追踪"}},[t._v("SkyWalking 支持云原生网络代理 MOSN 做分布式追踪")]),t._v(" "),a("p",[t._v("作者："),a("a",{attrs:{href:"https://jimmysong.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jimmy Song"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://github.com/arugal",target:"_blank",rel:"noopener noreferrer"}},[t._v("张伟"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("日前，云原生网络代理 MOSN v0.12.0 发布，观察性分析平台和应用性能管理系统 SkyWalking 完成了与 MOSN 的集成，作为 MOSN 中的支持的分布式追踪系统之一，旨在实现在微服务和 Service Mesh 中的更强大的可观察性。")]),t._v(" "),a("h2",{attrs:{id:"背景"}},[t._v("背景")]),t._v(" "),a("p",[t._v("相比传统的巨石（Monolith）应用，微服务的一个主要变化是将应用中的不同模块拆分为了独立的进程。在微服务架构下，原来进程内的方法调用成为了跨进程的远程方法调用。相对于单一进程内的方法调用而言，跨进程调用的调试和故障分析是非常困难的，难以使用传统的代码调试程序或者日志打印来对分布式的调用过程进行查看和分析。")]),t._v(" "),t._m(0),t._v(" "),a("p",[t._v("如上图右边所示，微服务架构中系统中各个微服务之间存在复杂的调用关系。")]),t._v(" "),a("p",[t._v("一个来自客户端的请求在其业务处理过程中经过了多个微服务进程。我们如果想要对该请求的端到端调用过程进行完整的分析，则必须将该请求经过的所有进程的相关信息都收集起来并关联在一起，这就是“分布式追踪”。")]),t._v(" "),a("p",[t._v("以上关于分布式追踪的介绍引用自 "),a("a",{attrs:{href:"https://www.servicemesher.com/istio-handbook/practice/distributed-tracing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Istio Handbook"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"mosn-中-tracing-的架构"}},[t._v("MOSN 中 tracing 的架构")]),t._v(" "),a("p",[t._v("MOSN 的 tracing 框架由 Driver、Tracer 和 Span 三个部分组成。")]),t._v(" "),a("p",[t._v("Driver 是 Tracer 的容器，管理注册的 Tracer 实例，Tracer 是 tracing 的入口，根据请求信息创建一个 Span，Span 存储当前跨度的链路信息。")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("目前 MOSN tracing 有 "),a("a",{attrs:{href:"http://github.com/sofastack/sofa-tracer",target:"_blank",rel:"noopener noreferrer"}},[t._v("SOFATracer"),a("OutboundLink")],1),t._v(" 和 SkyWalking 两种实现。SOFATracer 支持 http1 和 xprotocol 协议的链路追踪，将 trace 数据写入本地日志文件中。SkyWalking 支持 http1 协议的链路追踪，使用原生的 Go 语言探针 "),a("a",{attrs:{href:"https://github.com/SkyAPM/go2sky",target:"_blank",rel:"noopener noreferrer"}},[t._v("go2sky"),a("OutboundLink")],1),t._v(" 将 trace 数据通过 gRPC 上报到 SkyWalking 后端服务。")]),t._v(" "),a("h2",{attrs:{id:"快速开始"}},[t._v("快速开始")]),t._v(" "),a("p",[t._v("下面将使用 Docker 和 "),a("code",[t._v("docker-compose")]),t._v(" 来快速开始运行一个集成了 SkyWalking 的分布式追踪示例，该示例代码请见 "),a("a",{attrs:{href:"https://github.com/mosn/mosn/tree/master/examples/codes/trace/skywalking/http",target:"_blank",rel:"noopener noreferrer"}},[t._v("MOSN GitHub"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"准备"}},[t._v("准备")]),t._v(" "),a("p",[t._v("安装 docker 和 docker-compose。")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://docs.docker.com/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装 docker"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装 docker-compose"),a("OutboundLink")],1)])])]),t._v(" "),a("p",[t._v("需要一个编译好的 MOSN 程序，您可以"),a("a",{attrs:{href:"https://github.com/mosn/mosn",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载 MOSN 源码"),a("OutboundLink")],1),t._v("自行编译，或者直接下载 "),a("a",{attrs:{href:"https://github.com/mosn/mosn/releases/tag/v0.12.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("MOSN v0.12.0 发行版"),a("OutboundLink")],1),t._v("以获取 MOSN 的运行时二进制文件。")]),t._v(" "),a("p",[t._v("下面将以源码编译的方式演示 MOSN 如何与 SkyWalking 集成。")]),t._v(" "),t._m(2),a("p",[t._v("获取示例代码目录。")]),t._v(" "),t._m(3),a("p",[t._v("将编译好的程序移动到示例代码目录。")]),t._v(" "),t._m(4),a("h3",{attrs:{id:"目录结构"}},[t._v("目录结构")]),t._v(" "),a("p",[t._v("下面是 SkyWalking 的目录结构。")]),t._v(" "),t._m(5),a("h3",{attrs:{id:"运行说明"}},[t._v("运行说明")]),t._v(" "),a("p",[t._v("启动 SkyWalking oap & ui。")]),t._v(" "),t._m(6),a("p",[t._v("启动一个 HTTP Server。")]),t._v(" "),t._m(7),a("p",[t._v("启动 MOSN。")]),t._v(" "),t._m(8),a("p",[t._v("启动一个 HTTP Client。")]),t._v(" "),t._m(9),a("p",[t._v("打开 "),a("a",{attrs:{href:"http://127.0.0.1:8080/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://127.0.0.1:8080"),a("OutboundLink")],1),t._v(" 查看 SkyWalking-UI，SkyWalking Dashboard 界面如下图所示。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),a("h3",{attrs:{id:"demo-视频"}},[t._v("Demo 视频")]),t._v(" "),a("p",[t._v("下面来看一下该 Demo 的操作视频。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.bilibili.com/video/BV17i4y1t7mZ/",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1ge3oul0bf7j31bs0qoae2.jpg",alt:"Demo"}}),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"清理"}},[t._v("清理")]),t._v(" "),a("p",[t._v("要想销毁 SkyWalking 后台运行的 docker 容器只需要下面的命令。")]),t._v(" "),t._m(12),a("h2",{attrs:{id:"未来计划"}},[t._v("未来计划")]),t._v(" "),a("p",[t._v("在今年五月份，SkyWalking  8.0 版本会进行一次全面升级，采用新的探针协议和分析逻辑，探针将更具互感知能力，更好的在 Service Mesh 下使用探针进行监控。同时，SkyWalking 将开放之前仅存在于内核中的 metrics 指标分析体系。Prmoetheus、Spring Cloud Sleuth、Zabbix 等常用的 metrics 监控方式，都会被统一的接入进来，进行分析。此外， SkyWalking 与 MOSN 社区将继续合作：支持追踪 Dubbo 和 "),a("a",{attrs:{href:"https://github.com/sofastack/sofa-rpc",target:"_blank",rel:"noopener noreferrer"}},[t._v("SOFARPC"),a("OutboundLink")],1),t._v("，同时适配 sidecar 模式下的链路追踪。")]),t._v(" "),a("h2",{attrs:{id:"关于-mosn"}},[t._v("关于 MOSN")]),t._v(" "),a("p",[t._v("MOSN 是一款使用 Go 语言开发的网络代理软件，由蚂蚁金服开源并经过几十万容器的生产级验证。 MOSN 作为云原生的网络数据平面，旨在为服务提供多协议、模块化、智能化、安全的代理能力。 MOSN 是 Modular Open Smart Network 的简称。 MOSN 可以与任何支持 xDS API 的 Service Mesh 集成，亦可以作为独立的四、七层负载均衡，API Gateway、云原生 Ingress 等使用。")]),t._v(" "),a("ul",[a("li",[t._v("GitHub："),a("a",{attrs:{href:"https://github.com/mosn/mosn",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/mosn/mosn"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("官网："),a("a",{attrs:{href:"https://mosn.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mosn.io"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"关于-skywalking"}},[t._v("关于 Skywalking")]),t._v(" "),a("p",[t._v("SkyWalking 是观察性分析平台和应用性能管理系统。提供分布式追踪、服务网格遥测分析、度量聚合和可视化一体化解决方案。支持 Java、.Net Core、PHP、NodeJS、Golang、LUA 语言探针，支持 Envoy/MOSN + Istio 构建的 Service Mesh。")]),t._v(" "),a("ul",[a("li",[t._v("GitHub："),a("a",{attrs:{href:"https://github.com/apache/skywalking",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/apache/skywalking"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("官网："),a("a",{attrs:{href:"https://skywalking.apache.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://skywalking.apache.org"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("关于本文中的示例请参考 "),a("a",{attrs:{href:"https://github.com/mosn/mosn/tree/master/examples/cn_readme/trace/skywalking/http",target:"_blank",rel:"noopener noreferrer"}},[t._v("MOSN GitHub"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://mosn.io/zh/docs/configuration/trace/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MOSN 官方文档"),a("OutboundLink")],1),t._v("。")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1ge3oukfgezj30pj0d5t9l.jpg",alt:"分布式追踪示意图"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1ge3ouldo7ej316u0gdq44.jpg",alt:"MOSN 中的 tracing 架构"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("cd")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[this._v("${projectpath}")]),this._v("/cmd/mosn/main\ngo build\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[this._v("${targetpath}")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[this._v("${projectpath}")]),this._v("/examples/codes/trace/skywalking/http/\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" main "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${targetpath}")]),t._v("/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${targetpath}")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("* skywalking\n└─── http\n│           main                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译完成的 MOSN 程序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           server.go                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模拟的 Http Server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           clint.go                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模拟的 Http Client")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           config.json                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MOSN 配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("           skywalking-docker-compose.yaml "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# skywalking docker-compose")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("docker-compose -f skywalking-docker-compose.yaml up -d\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("go run server.go\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("./main start -c config.json\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("go run client.go\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1ge99xmtrz9j31hc0r2mxz.jpg",alt:"SkyWalking Dashboard"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在打开 Dashboard 后请点击右上角的 "),e("code",[this._v("Auto")]),this._v(" 按钮以使页面自动刷新。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("cd")]),this._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[this._v("${projectpath}")]),this._v("/examples/codes/trace/skywalking/http/\ndocker-compose -f skywalking-docker-compose.yaml down\n")])])])}],!1,null,null,null);e.default=s.exports}}]);